<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Vanishing Point</title>
    <description>Hey Kowalski, you out there?</description>
    <link>http://viniciusprado.org/</link>
    <atom:link href="http://viniciusprado.org/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Thu, 19 May 2016 23:32:00 -0400</pubDate>
    <lastBuildDate>Thu, 19 May 2016 23:32:00 -0400</lastBuildDate>
    <generator>Jekyll v3.0.1</generator>
    
      <item>
        <title>Installation boot error (or don&#39;t forget GRUB)</title>
        <description>&lt;p&gt;Last week I updated my lab laptop to Ubuntu 16.04 even with lots of problems reported up to now I have no problems, with one simple exception.
I choose to do a fresh install. To make a dist-upgrade I would need to wait the 16.04.1 release. There’s some workarounds but laziness dominates.
During the installation I got an Grub error, a fatal error that crashes the install wizard. But I had the feeling that everything was fine but the grub.
During the reboot in USB drive Grub you can type &lt;code class=&quot;highlighter-rouge&quot;&gt;c&lt;/code&gt; to get a terminal. So you just need to type:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;linux (hd0,msdos)/boot/grub/vmlinuz&amp;lt;TAB&amp;gt;&amp;lt;TAB&amp;gt; root=/dev/sda1
initrd (hd0,msdos)/boot/initrd.gz
boot
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The auto-complete works so just &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;TAB&amp;gt;&amp;lt;TAB&amp;gt;&lt;/code&gt; and you get list of partitions and files to complete. You just need to be sure about your root partition.
After boot the installed Ubuntu, you can run boot-repair to fix your boot installation.&lt;/p&gt;

&lt;p&gt;That’s all!&lt;/p&gt;

&lt;center&gt; =] &lt;/center&gt;
</description>
        <pubDate>Sat, 14 May 2016 20:31:32 -0400</pubDate>
        <link>http://viniciusprado.org/installation-boot-error-or-dont-forget-grub/</link>
        <guid isPermaLink="true">http://viniciusprado.org/installation-boot-error-or-dont-forget-grub/</guid>
        
        
      </item>
    
      <item>
        <title>Updates about Pebble apps</title>
        <description>&lt;p&gt;I’ve been using my Pebble again after some time. I wrote about my expectations and applications &lt;a href=&quot;http://vncprado.github.io/best-pebble-apps-up-to-now-for-me/&quot;&gt;before&lt;/a&gt;. For my total surprise, they updated the firmware with something really good, closer to Pebble time. Basically, they redesigned the whole interface and learn which are the basic apps and made their own. Apps to get weather, calendar and notifications are built-in and really good.&lt;/p&gt;

&lt;p&gt;I’m in a huge dilemma about Music Boss. Its single advantage now is to launch the music apps. The built-in music app is really good. So I keep both but probably I’m going to remove Music Boss in the short term. I always can start the apps directly.&lt;/p&gt;

&lt;p&gt;For navigation, I’m using Directions by Thibaut Rey but I need to test it. I keep Nav Me because I thing that I paid for it but definitely lost its position. I like Runkeeper and it stays the best and simplest. Endomondo didn’t have any updates since 2014 so I’m not going to test it again.&lt;/p&gt;

&lt;p&gt;That’s all!&lt;/p&gt;

&lt;center&gt; =] &lt;/center&gt;
</description>
        <pubDate>Mon, 02 May 2016 23:01:37 -0400</pubDate>
        <link>http://viniciusprado.org/updates-about-pebble-apps/</link>
        <guid isPermaLink="true">http://viniciusprado.org/updates-about-pebble-apps/</guid>
        
        
      </item>
    
      <item>
        <title>Retropie + SNES controller + Kodi + Brazil list + Yatse</title>
        <description>&lt;p&gt;UPDATE 19/05/16:&lt;/p&gt;

&lt;p&gt;I bought an USB dongle WIFI+Bluetooth so I could have internet and bluetooth controllers on my Retropie.
The model is &lt;a href=&quot;https://www.amazon.ca/dp/B015IJ4P58/ref=pe_386430_193739550_TE_dp_1&quot;&gt;this&lt;/a&gt;. The fantasy name is Dragon 150Mbps WIFI with Bluetooth 4.0 USB adapter but its a Realtek chipset.&lt;/p&gt;

&lt;p&gt;To get WIFI you need to compile &lt;a href=&quot;https://github.com/lwfinger/rtl8723bu/&quot;&gt;this driver&lt;/a&gt;. To compile it on your Retropie you will need the help of &lt;a href=&quot;http://matthewdippel.blogspot.ca/2016/02/howto-build-rtl8723bu-for-raspbian.html&quot;&gt;this guy&lt;/a&gt;. But basically you will need to get and install linux-headers for Raspbian:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;wget https://www.niksula.hut.fi/~mhiienka/Rpi/linux-headers-rpi/linux-headers-4.1.13%2B_4.1.13%2B-2_armhf.deb
sudo dpkg –i ./linux-headers-4.1.13+-2_armhf.deb
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;There is also some changes in the Makefile:
&amp;gt; Hit CTRL+W and type “CONFIG_PLATFORM_I386_PC =” and hit Enter.  Set it to “n”. Add a line below it and type “CONFIG_RASPBIAN = y”.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ifeq ($(CONFIG_RASPBIAN), y)
EXTRA_CFLAGS += -DCONFIG_LITTLE_ENDIAN
EXTRA_CFLAGS += -DCONFIG_IOCTL_CFG80211
EXTRA_CFLAGS += -DRTW_USE_CFG80211_STA_EVENT # only enable when kernel &amp;gt;= 3.2
EXTRA_CFLAGS += -DCONFIG_P2P_IPS
ARCH := arm
CROSS_COMPILE := arm-linux-gnueabihf-
KVER := $(shell uname -r)
KSRC ?= /lib/modules/$(KVER)/build
MODULE_NAME := 8723bu
MODDESTDIR := /lib/modules/$(KVER)/kernel/drivers/net/wireless/
endif
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;For Bluetooth you’ll use &lt;a href=&quot;https://github.com/lwfinger/rtl8723au_bt&quot;&gt;this one&lt;/a&gt;. The &lt;a href=&quot;https://www.amazon.ca/dp/B00MB6CNN8/ref=pe_386430_193739550_TE_dp_1&quot;&gt;controller&lt;/a&gt; that I bought works with the test branch today. Maybe this will change in the future. The driver documentation says that you should use kernel branch for most recent kernels.&lt;/p&gt;

&lt;p&gt;Still need to test without USB 3.0 hub (using only the direct USB port in my raspberry pi).&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Some side project I’m working with my &lt;a href=&quot;https://www.raspberrypi.org/products/model-a-plus/&quot;&gt;Raspberry Pi A+&lt;/a&gt; is to transform it in a retro game with Bluetooth control and &lt;a href=&quot;http://kodi.wiki/view/Main_Page&quot;&gt;Kodi&lt;/a&gt; for IPTV. I’ve got &lt;a href=&quot;https://github.com/RetroPie/RetroPie-Setup/releases&quot;&gt;Retropie 3.5&lt;/a&gt; (for some reason 3.6 doesn’t update).&lt;/p&gt;

&lt;p&gt;To install:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ gzip -d retropie-v3.5-rpi1.img.gz
$ sudo dd bs=4M if=retropie-v3.6-rpi1_zero.img of=/dev/mmcblk0
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;To get my &lt;a href=&quot;http://www.dx.com/p/orico-a3h4-4-port-usb-3-0-high-speed-hub-aluminum-alloy-hub-w-us-plug-power-adapter-black-328849#.VxLodHUrLeQ&quot;&gt;USB hub&lt;/a&gt; working with WIFI dongle and keyboard I had to append &lt;code class=&quot;highlighter-rouge&quot;&gt;dwc_otg.speed=1&lt;/code&gt; in the file &lt;code class=&quot;highlighter-rouge&quot;&gt;/boot/cmdline.txt&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dwc_otg.lpm_enable=0 console=ttyAMA0,115200 console=tty1 root=/dev/mmcblk0p2 rootfstype=ext4 elevator=deadline fsck.repair=yes rootwait quiet loglevel=3 consoleblank=0 **dwc_otg.speed=1**
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Then configured WIFI from Raspberry’s menu.&lt;/p&gt;

&lt;p&gt;After that I installed the experimental Kodi from menu. Basically follow &lt;a href=&quot;https://github.com/RetroPie/RetroPie-Setup/wiki/KODI&quot;&gt;this&lt;/a&gt;. It is important to follow the instructions to have Kodi on the main menu of Emulation Station.&lt;/p&gt;

&lt;p&gt;To use my cellphone as a remote control I installed &lt;a href=&quot;http://yatse.tv/redmine/projects/yatse/wiki/XbmcConfig?utm_source=YatseApp&quot;&gt;Yatse&lt;/a&gt;. In this way you have a Chromecast like equipment. Remember to follow Yatse help to change Kodi Web settings.&lt;/p&gt;

&lt;p&gt;I have Brazil list of channels on PVR Simple client plug-in on Kodi.&lt;/p&gt;

&lt;p&gt;I also bought a Bluetooth and WIFI dongle that I will need to test with the SNES Bluetooth control as well to get my solution working. But up to now using my keyboard and USB hub everything is working fine.&lt;/p&gt;

&lt;p&gt;That’s all.&lt;/p&gt;

&lt;center&gt; =] &lt;/center&gt;
</description>
        <pubDate>Sat, 16 Apr 2016 21:52:18 -0400</pubDate>
        <link>http://viniciusprado.org/retropie-snes-controller-kodi-brazil-list-yatse/</link>
        <guid isPermaLink="true">http://viniciusprado.org/retropie-snes-controller-kodi-brazil-list-yatse/</guid>
        
        
      </item>
    
      <item>
        <title>Dynamixel Setup Using ROS</title>
        <description>&lt;p&gt;The Dynamixel package that is provided by ROS is really useful to control multi-joint manipulators or mobile robots using Dynamixel motors. It’s possible to find a nice tutorial &lt;a href=&quot;http://wiki.ros.org/dynamixel_controllers/Tutorials&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;One tutorial about the torque joint controller can be found &lt;a href=&quot;http://wiki.ros.org/dynamixel_controllers/Tutorials/Creating%20a%20joint%20torque%20controller&quot;&gt;here&lt;/a&gt;. The detail is that, in order to get this step-by-step working, you should setup the motor to wheel mode ON. For this, there is some scripts in the &lt;a href=&quot;https://github.com/arebgun/dynamixel_motor/tree/master/dynamixel_driver/scripts&quot;&gt;dynamixel package&lt;/a&gt;. Which you can install from &lt;code class=&quot;highlighter-rouge&quot;&gt;apt-get&lt;/code&gt; as usual.&lt;/p&gt;

&lt;p&gt;Using the package you could run:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ rosrun dynamixel_driver info_dump.py -p /dev/ttyUSB0 10
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;To get some information about your motors, and:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$rosrun dynamixel_driver set_servo_config.py --ccw-angle-limit=0 -p /dev/ttyUSB0 10
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;To change your motor (in this case id = 10), to wheel mode on. To change it back make sure you set &lt;code class=&quot;highlighter-rouge&quot;&gt;--ccw-angle-limit=1023&lt;/code&gt; or the max value your motor supports.&lt;/p&gt;

&lt;p&gt;That’s all.&lt;/p&gt;

&lt;center&gt; =] &lt;/center&gt;
</description>
        <pubDate>Wed, 06 Apr 2016 00:00:00 -0400</pubDate>
        <link>http://viniciusprado.org/dynamixel-setup-using-ros/</link>
        <guid isPermaLink="true">http://viniciusprado.org/dynamixel-setup-using-ros/</guid>
        
        
      </item>
    
      <item>
        <title>Using Fuzzylite in Ubuntu/ROS</title>
        <description>&lt;p&gt;In my PhD work we maybe are going to use some Fuzzy controllers, I found out this &lt;a href=&quot;http://www.fuzzylite.com/&quot;&gt;Fuzzylite&lt;/a&gt; really light and simple to use. Following how I got it working on my environment.&lt;/p&gt;

&lt;p&gt;I installed it following &lt;a href=&quot;http://praghuvamsi.blogspot.ca/2014/02/fuzzylite-installation-on-ubuntu.html&quot;&gt;this&lt;/a&gt; instructions. With a different version cloned from github &lt;a href=&quot;https://github.com/fuzzylite/fuzzylite.git&quot;&gt;repository&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So I don’t need to extract, only &lt;code class=&quot;highlighter-rouge&quot;&gt;cd&lt;/code&gt; fuzzylite folder inside fuzzylite git repository:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fuzzylite/:~$ cd fuzzylite
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Then CMake, make and make install:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fuzzylite/fuzzylite:~$ cmake .
fuzzylite/fuzzylite:~$ make
fuzzylite/fuzzylite:~$ sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;After that you need to export the installation local&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In this way it is possible to link the fuzzylite dynamically, you can use their &lt;a href=&quot;/misc/example.cpp&quot;&gt;example&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ g++ example.cpp -lfuzzylite
$ ./a.out
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;On ROS you can utilize the library updating your CMakelists.txt:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;## Specify libraries to link a library or executable target against
target_link_libraries(fuzzy_tests_node
  ${catkin_LIBRARIES}
  fuzzylite
)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Up to now I didn’t have any problems and I can use fuzzylite values to read from and update ROS topics.&lt;/p&gt;

&lt;p&gt;That’s all.&lt;/p&gt;

&lt;center&gt; =] &lt;/center&gt;
</description>
        <pubDate>Tue, 05 Apr 2016 00:00:00 -0400</pubDate>
        <link>http://viniciusprado.org/using-fuzzylite-in-ubuntu-ros/</link>
        <guid isPermaLink="true">http://viniciusprado.org/using-fuzzylite-in-ubuntu-ros/</guid>
        
        
      </item>
    
      <item>
        <title>Ubuntu on Chuwi Vi 10</title>
        <description>&lt;p&gt;UPDATE (26/04/16):&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Installation on a USB 3.0 drive&lt;/strong&gt;: It fails on grub normal installation. So I boot again with the first USB drive and type &lt;code class=&quot;highlighter-rouge&quot;&gt;c&lt;/code&gt; at GRUB and use instructions listed below to boot the USB 3.0 recent installed Ubuntu. After that I got my WIFI dongle (my built-in WIFI card is still not working) and follow &lt;a href=&quot;http://www.jfwhome.com/2016/01/04/latest-steps-to-install-ubuntu-on-the-asus-t100ta/&quot;&gt;this&lt;/a&gt; GRUB instructions:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo apt-get update
sudo apt-get install grub-efi-ia32
sudo nano /etc/default/grub
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Find the line starting GRUB_CMDLINE_LINUX_DEFAULT and add intel_idle.max_cstate=0 before quiet splash”.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo update-grub
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now I just need the USB 3.0 to boot my system, without changing (for now) my Windows installation.&lt;/p&gt;

&lt;p&gt;UPDATE (22-24/04/16):&lt;/p&gt;

&lt;p&gt;I forgot to write how to boot on USB-EFI. With the device off, you need to press &lt;code class=&quot;highlighter-rouge&quot;&gt;POWER + VOLUME_UP + VOLUME_DOWN&lt;/code&gt; and keep both volume buttons after it turned on, until you see the screen with selection buttons.&lt;/p&gt;

&lt;p&gt;Now that Ubuntu 16.04 was released I’ll try to make a stable version of it.&lt;/p&gt;

&lt;p&gt;I got touch screen working with &lt;a href=&quot;https://github.com/onitake/gslx680-acpi&quot;&gt;this&lt;/a&gt; driver. I’m planning to submit a pull request with Chuwi Vi 10 driver extracted from my Windows 10 driver to their &lt;a href=&quot;https://github.com/onitake/gsl-firmware&quot;&gt;firmware&lt;/a&gt; repository.&lt;/p&gt;

&lt;p&gt;UPDATE (19/12/15):&lt;/p&gt;

&lt;p&gt;Intel video acceleration on Ubuntu 15.10 USB drive works out of the box. To test it:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ /usr/lib/nux/unity_support_test -p
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In Ubuntu 16.04 (which is in testing now but will be LTS) video acceleration do not work all times.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;I’m writing this post to summarize all stuff I’ve been trying on my Chuwi Vi 10 tablet to work with Ubuntu.&lt;/p&gt;

&lt;p&gt;Here is some aspects of it:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Component&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Specs&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;CPU&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Intel Z3736F&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Audio&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Realtek ALC 5642 (byt_rt5640)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MIPI Panel&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Panasonic 19x12&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;WIFI&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Realtek RGN RTL8723BS&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Rear camera&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Lite-On 13P2BA829&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Front camera&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Lite-On 13P2BA829&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Bluetooth&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Realtek RGN RTL8723BS&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Charger&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;X-Powers integrated (AXP288)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Fuel Gauge&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;X-Powers integrated (AXP288)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;ALS Sensor&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Capella CM32181&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Gyro Sensor&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Bosch BMG 160&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Accel/Compass&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Bosch BMC 150&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Touchscreen&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Silead touch&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;p&gt;To boot I made an Ubuntu 14.04 (I tested 15.10 and it boot too) USB drive with &lt;a href=&quot;https://rufus.akeo.ie/&quot;&gt;Rufus&lt;/a&gt; on Windows. The boot need to be made with GPT but I didn’t have time to have an working USB drive created on Ubuntu yet. After created, I put &lt;a href=&quot;https://github.com/jfwells/linux-asus-t100ta/blob/master/boot/bootia32.efi&quot;&gt;bootia32.efi&lt;/a&gt; file at &lt;code class=&quot;highlighter-rouge&quot;&gt;/EFI/boot/&lt;/code&gt; Ubuntu USB drive directory.&lt;/p&gt;

&lt;p&gt;If you have no graphics after grub, you can type &lt;code class=&quot;highlighter-rouge&quot;&gt;e&lt;/code&gt; in grub menu to edit the line starting on &lt;code class=&quot;highlighter-rouge&quot;&gt;linux	/casper/vmlinuz.efi...&lt;/code&gt;, remove &lt;code class=&quot;highlighter-rouge&quot;&gt;quite splash&lt;/code&gt; and add &lt;code class=&quot;highlighter-rouge&quot;&gt;nomodeset reboot=pci,force&lt;/code&gt; in the end.&lt;/p&gt;

&lt;p&gt;Using the option &lt;code class=&quot;highlighter-rouge&quot;&gt;Try Ubuntu&lt;/code&gt; you would be able to install like in any other computer.&lt;/p&gt;

&lt;p&gt;After installation, you need to boot from USB drive again and compile Grub inside your installation, to do so you need any USB dongle for WIFI connection. You can find this instructions &lt;a href=&quot;http://www.jfwhome.com/2014/03/07/perfect-ubuntu-or-other-linux-on-the-asus-transformer-book-t100/&quot;&gt;here&lt;/a&gt;. When Grub starts, type &lt;code class=&quot;highlighter-rouge&quot;&gt;c&lt;/code&gt; to enter command line and type:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;linux (hd2,gpt5)/boot/vmlinuz-3.13-xxxx root=/dev/mmcblk0p5 video=VGA-1:1368x768e reboot=pci,force
initrd (hd2,gpt5)/boot/initrd-3.13-xxxx
boot
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;After booting you need to install some stuff, and clone Grub repository to compile it:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install git bison libopts25 libselinux1-dev autogen m4 autoconf help2man libopts25-dev flex libfont-freetype-perl automake autotools-dev libfreetype6-dev texinfo ia32_libs build_essential
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The package &lt;code class=&quot;highlighter-rouge&quot;&gt;ia32_libs&lt;/code&gt; maybe a problem because, apparently, it is not anymore on Ubuntu 14.04. To install it try:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ sudo -i
# cd /etc/apt/sources.list.d
# echo &quot;deb http://old-releases.ubuntu.com/ubuntu/ raring main restricted universe multiverse&quot; &amp;gt;ia32-libs-raring.list
# apt-get update
# apt-get install ia32-libs
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Then get the Grub source:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git clone git://git.savannah.gnu.org/grub.git
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now build it:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd grub
$ ./autogen.sh
$ ./configure --with-platform=efi --target=i386 --program-prefix=&quot;&quot;
$ make
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And install to efi:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd grub-core
$ sudo ../grub-install -d . --efi-directory /boot/efi/ --target=i386
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This will create a directory, ‘grub’, in your EFI partition.
We want to copy the grubia32.efi from there to the location Ubuntu created during installation:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ cd /boot/efi/EFI
$ sudo cp grub/grubia32.efi ubuntu/grubx64.efi
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;After this command you should be able to boot directly to your new Ubuntu installation.&lt;/p&gt;

&lt;p&gt;I’ll (hope to) continue to update this with improvements.
I have a Dell Venue 8 Pro working with some Kernel 4.x which already have better support for Atom processors. So the idea is to have a newer Ubuntu (probably 15.10 which were already released, or a testing version) in order to get at least basic stuff working.&lt;/p&gt;

&lt;p&gt;Some other sources:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://techtablets.com/chuwi-vi10/review/&quot;&gt;http://techtablets.com/chuwi-vi10/review/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://forum.xda-developers.com/windows-8-rt/general/chuwi-vi10-dual-boot-win-8-1-android-4-4-t3112954&quot;&gt;http://forum.xda-developers.com/windows-8-rt/general/chuwi-vi10-dual-boot-win-8-1-android-4-4-t3112954&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sun, 13 Dec 2015 00:00:00 -0500</pubDate>
        <link>http://viniciusprado.org/ubuntu-on-chuwi-vi-10/</link>
        <guid isPermaLink="true">http://viniciusprado.org/ubuntu-on-chuwi-vi-10/</guid>
        
        
      </item>
    
      <item>
        <title>Simple standalone computer solution for our robot</title>
        <description>&lt;p&gt;In our lab there is a robot for demos in which we’ve been working a lot since the beginning of this year. I’ll explain a little bit about it and show our implementations in some post in the future.&lt;/p&gt;

&lt;p&gt;Now I want to talk about our standalone computer solution for this robot: &lt;a href=&quot;https://www.raspberrypi.org/&quot;&gt;Raspberry Pi 2&lt;/a&gt; + &lt;a href=&quot;https://wiki.ubuntu.com/ARM/RaspberryPi&quot;&gt;Ubuntu-ARM&lt;/a&gt; + &lt;a href=&quot;http://wiki.ros.org/indigo/Installation/UbuntuARM&quot;&gt;ROS-ARM&lt;/a&gt;. Quite simple, right? At this point yes, but I first tried using Raspbian in a Raspberry Pi A+ but its small RAM and limitations, which alone deserves a post, was almost impossible.&lt;/p&gt;

&lt;p&gt;I am sure need to try again but without an ROS-ARM repository for Debian things are hard. Using Raspberry 2 with Ubuntu installed, I had an initialization script set up for configuration and launch our robot code. In this way our solution provides a simple way to have the robot work with our code without any huge changes or portabilities. So It’s just put a battery and you have the robot running.&lt;/p&gt;

&lt;p&gt;That’s All!&lt;/p&gt;
</description>
        <pubDate>Mon, 30 Nov 2015 00:00:00 -0500</pubDate>
        <link>http://viniciusprado.org/not-so-simple-ros-solution/</link>
        <guid isPermaLink="true">http://viniciusprado.org/not-so-simple-ros-solution/</guid>
        
        
      </item>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;I’ll try to start using &lt;a href=&quot;http://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt; + &lt;a href=&quot;http://pages.github.com&quot;&gt;Github&lt;/a&gt; pages for simplicity. Manage a server takes too much time. With Jekyll, I’ll be able to have a small technical blog without taking my time which I barely manage now.&lt;/p&gt;

&lt;p&gt;I only have to understand now how to automatize this posts metadata. Probably will be easier than maintaining a whole system like I did with &lt;a href=&quot;http://ghost.org&quot;&gt;Ghost&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Following below the original “Welcome to Jekyll!” post. That’s All!&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Tom&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &#39;Hi, Tom&#39; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Wed, 18 Nov 2015 15:09:26 -0500</pubDate>
        <link>http://viniciusprado.org/welcome-to-jekyll/</link>
        <guid isPermaLink="true">http://viniciusprado.org/welcome-to-jekyll/</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Robô saltador flexível impresso em 3D [Pros/Cons]</title>
        <description>&lt;p&gt;Quando aparecem notícias sobre ciência na mídia, a pesquisa é apresentada de forma simplificada, até pelos próprios cientistas. A ideia é que o publico geral consiga absorver e entender os possíveis prognósticos do trabalho. Mas esse tipo de publicação deixa passar alguns pontos positivos e negativos inerentes de qualquer trabalho científico.&lt;/p&gt;

&lt;p&gt;Com isso em mente vou destacar alguns prós e contras do trabalho que foi divulgado como &lt;a href=&quot;http://g1.globo.com/tecnologia/noticia/2015/07/pesquisadores-de-harvard-criam-robo-capaz-de-saltar-como-sapos-veja.html&quot;&gt;“robô que salta igual um sapo”&lt;/a&gt; para tentar entender melhor a publicação. Não estou interessado em falar “mal” da notícia. É apenas um exercício de leitura do &lt;a href=&quot;http://www.sciencemag.org/content/349/6244/161&quot;&gt;artigo publicado&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;O trabalho foi apresentado como “sapo robô”. Este utiliza combustão para fazer saltos (o que já me parece diferente de um sapo, que utiliza força mecânica para saltar) sendo que a inclinação e o direcionamento do salto é feito pela modificação do formato da base do robô.&lt;/p&gt;

&lt;p&gt;O desenvolvimento de sistemas robóticos bioinspirados são extremamente importantes. Quando o cientista ou engenheiro observa algo funcionando na natureza, principalmente com seres vivos, ele tenta entender e produzir algo que possa desempenhar a mesma função, com uma eficiência parecida.&lt;/p&gt;

&lt;p&gt;Para o trabalho em questão eu consegui identificar:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Prós:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Técnicas de impressão 3D com vários materiais, inclusive flexíveis.&lt;/strong&gt; Ao invés de utilizar uma injetora ou outra técnica, o grupo utiliza impressão 3D com materiais flexíveis em várias camadas.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Técnica de mistura de gases e combustão controladas.&lt;/strong&gt; Não é uma área que eu entenda muito, mas o controle de gases, como essa pesquisa necessita, é muito interessante. São quantidades pequenas e precisas dos gases envolvidos na combustão.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Inclinação para mudança de direção.&lt;/strong&gt; Apenas um propulsor proporciona saltos em diversas direções.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Contras:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Sistema pneumático de mudança de direção.&lt;/strong&gt; O controle pneumático é difícil, além disso carregar um compressor pra todo lado não é uma boa ideia. No final deste post eu cito um trabalho que começa a repensar esse problema.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;A própria dinâmica do robô causa danos ao equipamento.&lt;/strong&gt; Mesmo flexível, acredito que ele ainda realiza poucos saltos antes de ter o funcionamento comprometido, aqui a questão do design é fundamental. Com um projeto mecânico diferente talvez o problema seja minimizado.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Apesar de colocar como contra, parece que a ideia do compressor começa a ser melhor trabalhada &lt;a href=&quot;http://spectrum.ieee.org/automaton/robotics/robotics-hardware/pneumatic-generator-could-make-soft-robots-useful&quot;&gt;aqui.&lt;/a&gt; Nesse artigo um compressor diferente é desenvolvido a partir da quebra de moléculas de água para criação de gases. A notícia acima exemplifica com vários projetos que utilizam ação pneumática e poderiam ser beneficiados com o trabalho, inclusive este “sapo robô”.&lt;/p&gt;

&lt;p&gt;Isso é tudo.
=]&lt;/p&gt;
</description>
        <pubDate>Sat, 11 Jul 2015 13:24:22 -0400</pubDate>
        <link>http://viniciusprado.org/robo-saltador-flexivel-impresso-em-3d/</link>
        <guid isPermaLink="true">http://viniciusprado.org/robo-saltador-flexivel-impresso-em-3d/</guid>
        
        
      </item>
    
      <item>
        <title>Best Pebble Apps Up to Now For Me</title>
        <description>&lt;p&gt;I recently bought a Pebble smartwatch. I’ve heard about this for a long time, but now I’m getting into running so I thought that would be a good idea have something to help me tracking my goals. I know that they released a new version early this year but the original one is good enough for me and my pocket.&lt;/p&gt;

&lt;p&gt;Following some apps that I found most useful up to now:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Fuzzy text:&lt;/strong&gt; This actually is an watchface which shows you a more human-like way to read time, available in several languages.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Music Boss:&lt;/strong&gt; One BIG improvement in the default music player which remains in Pebble’s main menu. I’ve got some bugs concerning Bluetooth delay and my Moto G laziness but worth every penny (actually 2 dollars). You can control many music apps (I’m using Google play and Podcast Republic in a daily basis). There are some shortcuts to change tracks and launch apps, but I’m not really too much into it.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Weather:&lt;/strong&gt; Shows you weather information for now or for the next five days. Uses GPS to get a closer information. It vibrates when results are loaded. It’s currently the app with most likes.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Nav ME:&lt;/strong&gt; I think that this one is in beta for android and is paid for iOS (I’m not sure) but with a good price I would buy it. You just need set your destination on Google Maps and start navigation to get the information on your wrist. Really useful for cycling. Actually I think that this use case is the step closer to what we all need from a smartwatch. Set up some stuff on your cell phone and get useful information on your wrist.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Travvik:&lt;/strong&gt; Another really good surprise for my Pebble. Here in Ottawa I just set the bus stop that I’m at and the bus number I need to get updates on how long it will take to arrive. Another really good use case. It’s just missing a clever way to search the bus stop number (GPS or a fav list) or integration to android apps like NavMe.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Notification Center:&lt;/strong&gt; One really complete way to get your notifications. A simple way to dismiss and reply (limited but ok)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Run trackers:&lt;/strong&gt; I’ve used Nike+ to track my runs. It’s a nice app with a free training plan, but it has a lot of bugs here and there. Now I’m moving to RunKeeper, but this post is about Pebble! Most apps for runs usually use Pebble just to show time, distance, pace, etc. As far as I know, Endomondo is the only app that has a Pebble app where you can start and pause your activity. Personally, I’m gonna try RunKeeper for now because of its free training plans. Even with a simpler integration with Pebble its the best, but I will try to use Endomondo during races considering its start/stop feature.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That’s all!
=]&lt;/p&gt;
</description>
        <pubDate>Mon, 25 May 2015 21:15:18 -0400</pubDate>
        <link>http://viniciusprado.org/best-pebble-apps-up-to-now-for-me/</link>
        <guid isPermaLink="true">http://viniciusprado.org/best-pebble-apps-up-to-now-for-me/</guid>
        
        
      </item>
    
  </channel>
</rss>
